<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Willmendesneto Blog</title>
    <description>This is my blog, when i talk about technologies</description>
    <link>/</link>
    <atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Tue, 15 Jul 2014 13:41:34 -0300</pubDate>
    <lastBuildDate>Tue, 15 Jul 2014 13:41:34 -0300</lastBuildDate>
    <generator>Jekyll v2.1.0</generator>
    
      <item>
        <title>Instalação do ambiente para desenvolvimento com Phonegap no Windows</title>
        <description>&lt;p&gt;&lt;a href=&quot;/assets/images/phonegap-logo2.png&quot;&gt;&lt;img class=&quot;size-large wp-image-198&quot; src=&quot;/assets/images/phonegap-logo2.png&quot; alt=&quot;Instalação do ambiente para desenvolvimento com Phonegap no Windows&quot; width=&quot;800&quot; height=&quot;226&quot; /&gt;&lt;/a&gt; Instalação do ambiente para desenvolvimento com Phonegap no Windows&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Uma dica rápida, após um período sem postar nada no blog.&lt;/p&gt;
&lt;p&gt;Tive que utilizar o windows para criar um projeto com o phonegap e tive alguns problemas para a configuração inicial. Fica a fica de alguns links que ajudaram na configuração do ambiente no Windows.&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Links para instalação do android no windows:&lt;/p&gt;
&lt;p&gt;1 - Guia de instalação do Nodejs (No Windows ele tem um executável, então não possui guia, é baixar instalar e pronto)&lt;br /&gt;
&lt;a href=&quot;http://nodejs.org/&quot;&gt;http://nodejs.org/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2 - Guia de instalação da plataforma android no site do Phonegap&lt;br /&gt;
* Faça o download do Phonegap no site. Vai ser importante, pois inserimos ele na variável de ambiente PATH também&lt;br /&gt;
&lt;a href=&quot;http://phonegap.com/install/&quot;&gt;http://phonegap.com/install/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://docs.phonegap.com/en/edge/guide_platforms_android_index.md.html#Android%20Platform%20Guide&quot;&gt;http://docs.phonegap.com/en/edge/guide_platforms_&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://docs.phonegap.com/en/edge/guide_platforms_android_index.md.html#Android%20Platform%20Guide&quot;&gt;android_index.md.html#Android%20Platform&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://docs.phonegap.com/en/edge/guide_platforms_android_index.md.html#Android%20Platform%20Guide&quot;&gt;%20Guide&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3 - Instalação do Ant (obrigatório):&lt;br /&gt;
&lt;a href=&quot;http://pt.wikinourau.org/bin/view/GrupoJava/InstalandoAnt&quot;&gt;http://pt.wikinourau.org/bin/view/GrupoJava/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://pt.wikinourau.org/bin/view/GrupoJava/InstalandoAnt&quot;&gt;InstalandoAnt&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;4 - Download do eclipse e instale os plugins:&lt;br /&gt;
- ADT;&lt;br /&gt;
- Applaud (&lt;a href=&quot;http://www.loiane.com/2012/06/comecando-com-phone-gap-cordova-com-applaud-plugin-hello-world-android/&quot;&gt;http://www.loiane.com/2012/06/comecando-com-phone-gap-cordova-com-applaud-plugin-hello-world-android/&lt;/a&gt;);&lt;/p&gt;
&lt;p&gt;* O Eclipse que vem no Pacote adt-bundle serve somente para trabalhar com Android. Para maiores informações vejam estes links:&lt;br /&gt;
&lt;a href=&quot;https://groups.google.com/forum/#!msg/eclipse-plugin-for-phonegap/ABdw6oL_Vg0/jQwjupZO9SYJ&quot;&gt;https://groups.google.com/forum/#!msg/eclipse-plugin-for-phonegap/ABdw6oL_Vg0/jQwjupZO9SYJ&lt;/a&gt;&lt;br /&gt;
&lt;a href=&quot;https://code.google.com/a/eclipselabs.org/p/mobile-web-development-with-phonegap/issues/detail?id=97&quot;&gt;https://code.google.com/a/eclipselabs.org/p/mobile-web-development-with-phonegap/issues/detail?id=97&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;Até mais!&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Jun 2014 00:00:00 -0300</pubDate>
        <link>/2014/06/21/instalacao-do-ambiente-para-desenvolvimento-com-phonegap-no-windows</link>
        <guid isPermaLink="true">/2014/06/21/instalacao-do-ambiente-para-desenvolvimento-com-phonegap-no-windows</guid>
        
        <category>confuguração</category>
        
        <category>mobile</category>
        
        <category>phonegap</category>
        
        
        <category>dicas e truques</category>
        
        <category>ide&#39;s/editores</category>
        
        <category>linguagens de programação</category>
        
        <category>mobile</category>
        
      </item>
    
      <item>
        <title>Minificação de output de maneira simples com PHP</title>
        <description>&lt;p&gt;Olá pessoal.&lt;/p&gt;
&lt;p&gt;Uma dica bem simples para quem está fazendo algum site em PHP (independente de Framework). A grande maioria dos frameworks possuem a &lt;em&gt;feature&lt;/em&gt; de minificação da saída de HTML. Isso é muito útil pois melhora o tempo de carregamento do site/aplicação para os seus usuários.&lt;/p&gt;
&lt;p&gt;Fiz este gist pra mostrar uma forma bem simples de como usar a minificação, caso não haja um suporte padrão.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://gist.github.com/willmendesneto/7236329&quot;&gt;https://gist.github.com/willmendesneto/7236329&lt;/p&gt;
&lt;p&gt;&lt;/a&gt;Claro que esse Regex deve ser melhorado, mas a idéia seria basicamente esta. Existem também algumas configurações a serem feitas no seu servidor que já facilitam bastante, mas fica para um próximo post.&lt;/p&gt;
&lt;p&gt;Até mais!&lt;/p&gt;
</description>
        <pubDate>Sun, 03 Nov 2013 00:00:00 -0300</pubDate>
        <link>/2013/11/03/minificacao-de-output-de-maneira-simples-com-php</link>
        <guid isPermaLink="true">/2013/11/03/minificacao-de-output-de-maneira-simples-com-php</guid>
        
        <category>html</category>
        
        <category>minicação</category>
        
        <category>output</category>
        
        <category>php</category>
        
        
        <category>linguagens de programação</category>
        
        <category>php</category>
        
      </item>
    
      <item>
        <title>Usando abas na linha de comando do Windows</title>
        <description>&lt;p&gt;Olá pessoal.&lt;/p&gt;
&lt;p&gt;Uma dica bem prática para quem utiliza a linha de comando no Windows. Uma coisa que é bastante usual em Linux/Mac é a questão das abas na linha de comando. Isso agiliza o trabalho horrores!&lt;/p&gt;
&lt;p&gt;Eu instalei o git no Windows da seguinte forma:&lt;/p&gt;
&lt;p&gt;Com o git bash intalado em sua máquina, vamos agora fazer o download do programa Console2 (http://sourceforge.net/projects/console/) e inserí-lo na pasta que contém os outros arquivos de programas&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;//assets/images/screenshot001.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-176&quot; alt=&quot;Diretório do Console2 instalado na máquina&quot; src=&quot;/assets/images/screenshot001.jpg&quot; width=&quot;594&quot; height=&quot;423&quot; /&gt;&lt;/a&gt; Diretório do Console2 instalado na máquina&lt;/p&gt;
&lt;p&gt;Agora vamos executar o console2 e vamos em Edit &amp;gt; Settings para fazermos a nossa configuração inicial para unirmos o git bash ao console2.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/screenshot002.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-177&quot; alt=&quot;Console2  configuração inicial&quot; src=&quot;/assets/images/screenshot002.jpg&quot; width=&quot;594&quot; height=&quot;187&quot; /&gt;&lt;/a&gt; Console2 configuração inicial&lt;/p&gt;
&lt;p&gt;Ao clicar na opção vai abrir um popup. No canto direito vamos clicar na opção &quot;Tabs&quot; e vamos inserir as informações:&lt;/p&gt;
&lt;p&gt;Title: Git Bash&lt;br /&gt;
Icon: C:\Program Files (x86)\Git\etc\git.ico&lt;br /&gt;
Shell: &quot;C:\Program Files (x86)\Git\bin\sh.exe&quot; --login -i&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/screenshot003.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-178&quot; alt=&quot;Configurando o Git Bash no Console2&quot; src=&quot;/assets/images/screenshot003.jpg&quot; width=&quot;546&quot; height=&quot;560&quot; /&gt;&lt;/a&gt; Configurando o Git Bash no Console2&lt;/p&gt;
&lt;p&gt;Agora vamos clicar na opção &quot;Hotkeys&quot; no canto direito para modificarmos o atalho para a criação de uma nova aba. Clique na opção &quot;New Tab 1&quot; e abaixo insira as informações:&lt;/p&gt;
&lt;p&gt;Command: New Tab 1&lt;br /&gt;
Hotkey: Ctrl + T (Clique nos Botões para inserir este valor no campo)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://willmendesnetoprojects.files.wordpress.com/2013/07/screenshot004.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-179&quot; alt=&quot;Modificando atalhos no Console2&quot; src=&quot;/assets/images/screenshot004.jpg&quot; width=&quot;535&quot; height=&quot;559&quot; /&gt;&lt;/a&gt; Modificando atalhos no Console2&lt;/p&gt;
&lt;p&gt;Clique no botão &quot;Assign&quot; para salvar o atalho para a criação de uma nova aba.&lt;/p&gt;
&lt;p&gt;Vamos na opção &quot;Behavior&quot; para mudarmos o caracter de cópia de nova linha para Linux&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://willmendesnetoprojects.files.wordpress.com/2013/07/screenshot005.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-180&quot; alt=&quot;Configurações do Console2&quot; src=&quot;/assets/images/screenshot005.jpg&quot; width=&quot;546&quot; height=&quot;561&quot; /&gt;&lt;/a&gt; Configurações do Console2&lt;/p&gt;
&lt;p&gt;Agora para modificarmos um pouco a sua aparência vamos na opção &quot;Appearance&quot; e vamos mudar os valores&lt;/p&gt;
&lt;p&gt;Font&lt;br /&gt;
Name: Lucida Console (a fonte utilizada no Git Bash);&lt;br /&gt;
Size: 12&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://willmendesnetoprojects.files.wordpress.com/2013/07/screenshot006.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-181&quot; alt=&quot;Modificando a fonte do Console2&quot; src=&quot;/assets/images/screenshot006.jpg&quot; width=&quot;548&quot; height=&quot;564&quot; /&gt;&lt;/a&gt; Modificando a fonte do Console2&lt;/p&gt;
&lt;p&gt;Clicamos em &quot;Appearance &amp;gt; More...&quot; para finalizarmos com as nossas modificações&lt;/p&gt;
&lt;p&gt;Window transparency&lt;br /&gt;
Alpha: 20&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://willmendesnetoprojects.files.wordpress.com/2013/07/screenshot011.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-188&quot; alt=&quot;Configurando transparência no Console2&quot; src=&quot;/assets/images/screenshot011.jpg&quot; width=&quot;545&quot; height=&quot;561&quot; /&gt;&lt;/a&gt; Configurando transparência no Console2&lt;/p&gt;
&lt;p&gt;Para finalizarmos vamos na opção &quot;Console&quot; e vamos direcionar o programa para que inicie na raíz da pasta do usuário&lt;/p&gt;
&lt;p&gt;Startur dir: C:\Users\pasta-com-seu-usuario\ (no meu caso &quot;willmendesneto&quot;)&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://willmendesnetoprojects.files.wordpress.com/2013/07/screenshot007.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-182&quot; alt=&quot;Configurando inicialização do Gitbash no Console2&quot; src=&quot;/assets/images/screenshot007.jpg&quot; width=&quot;546&quot; height=&quot;559&quot; /&gt;&lt;/a&gt; Configurando inicialização do Gitbash no Console2&lt;/p&gt;
&lt;p&gt;Com o programa configurado, cria um atalho no seu Desktop e modifique as propriedades do atalho clicando com o botão direito no atalho criado e escolhendo a opção &quot;Propriedades&quot;. Assim que o popup abrir clique na opção &quot;Atalho &amp;gt; Alterar ícone &amp;gt; Procurar&quot; e insira esta informação para que o Console2 fique com o ícone do Git Bash.&lt;/p&gt;
&lt;p&gt;%ProgramFiles% (x86)\Git\etc\git.ico&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://willmendesnetoprojects.files.wordpress.com/2013/07/screenshot010.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-185&quot; alt=&quot;Modificando ícone de atalho&quot; src=&quot;/assets/images/screenshot010.jpg&quot; width=&quot;398&quot; height=&quot;515&quot; /&gt;&lt;/a&gt; Modificando ícone de atalho&lt;/p&gt;
&lt;p&gt;O resultado final será seu programa funcionando com tudo que você tem direito (na medida do possível) em um ambiente Windows, lembrando que o Git bash instala algumas coisas bem legais como Vim, comandos &quot;find&quot; e outras coisas que ajudam bastante.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://willmendesnetoprojects.files.wordpress.com/2013/07/screenshot009.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-184&quot; alt=&quot;Finalizando integração Git Bash e Console2&quot; src=&quot;/assets/images/screenshot009.jpg&quot; width=&quot;594&quot; height=&quot;173&quot; /&gt;&lt;/a&gt; Finalizando integração Git Bash e Console2&lt;/p&gt;
&lt;p&gt;Obrigado e até mais!&lt;/p&gt;
&lt;p&gt;Este post foi baseado em algumas dicas que achei no post &quot;git bash &amp;amp; console2, finally! (&lt;a title=&quot;http://johngilliland.wordpress.com/2012/12/22/git-bash-console2-finally/&quot; href=&quot;http://johngilliland.wordpress.com/2012/12/22/git-bash-console2-finally/&quot; target=&quot;_blank&quot;&gt;http://johngilliland.wordpress.com/2012/12/22/git-bash-console2-finally/&lt;/a&gt;)&quot; do blog de &quot;John Gilliland&quot; com algumas alterações.&lt;/p&gt;
</description>
        <pubDate>Wed, 31 Jul 2013 00:00:00 -0300</pubDate>
        <link>/2013/07/31/usando-abas-na-linha-de-comando-do-windows</link>
        <guid isPermaLink="true">/2013/07/31/usando-abas-na-linha-de-comando-do-windows</guid>
        
        <category>abas</category>
        
        <category>cli</category>
        
        <category>console2</category>
        
        <category>git</category>
        
        <category>git bash</category>
        
        <category>linha de comando</category>
        
        <category>windows</category>
        
        
        <category>dicas e truques</category>
        
        <category>git</category>
        
        <category>outros</category>
        
      </item>
    
      <item>
        <title>Adicionando Angularjs via CDN + fallback</title>
        <description>&lt;p&gt;Olá pessoal.&lt;/p&gt;
&lt;p&gt;Inicialmente vou falar do assunto CDN ou &lt;em&gt;Content Delivery Network&lt;/em&gt; (caso não saiba do que estou falando &lt;a href=&quot;http://pt.wikipedia.org/wiki/Content_Delivery_Network&quot; target=&quot;_blank&quot;&gt;leia a definição do Wikipedia sobre CDN&lt;/a&gt;). As vantagens de inserir um arquivo em seu site via CDN são diversas como Cache de arquivos, diminui a latência da requisição e o arquivo pode ser carregado paralelamente com os demais conteúdos do site, o que melhora a performance.&lt;/p&gt;
&lt;p&gt;Porém um dos pontos que podem impactar na utilização de arquivos via CDN são as dependências diretas de servidores externos. Caso os servidores por qualquer motivo pararem de disponibilizar o arquivo (podem estar off por &quot;N&quot; motivos) sua aplicação estaria comprometida. Para isso existem os chamados &lt;em&gt;fallbacks&lt;/em&gt;, que nada mais é do que, neste caso, uma verificação de carregamento do arquivo, caso contrário insere o arquivo local . Utilizando o &lt;a href=&quot;http://angularjs.org/&quot; target=&quot;_blank&quot;&gt;angularjs&lt;/a&gt; não seria diferente também. Existe uma maneira simples de verificarmos se o arquivo foi carregado corretamente, caso contrário inserimos o arquivo localmente e para o usuário final a utilização fica transparente. Duvida?&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;!-- Angular JS off CDN, otherwise fallback. --&amp;gt;
&amp;lt;script src=&quot;https://ajax.googleapis.com/ajax/libs/angularjs/1.0.7/&lt;code&gt;angular.min.js&lt;/code&gt;&quot;&amp;gt;&amp;lt;/script&amp;gt;
 &amp;lt;script&amp;gt;
    window.angular || document.write(&#39;&amp;lt;script src=&quot;scripts/vendor/angular-1.0.7.min.js&quot;&amp;gt;&amp;lt;\/script&amp;gt;&#39;);
 &amp;lt;/script&amp;gt;&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;Bastante simples, não acham? Da mesma forma você pode fazer um &lt;em&gt;fallback&lt;/em&gt; para o &lt;a href=&quot;http://jquery.com/&quot; target=&quot;_blank&quot;&gt;jquery&lt;/a&gt; e outros arquivos, bibliotecas, etc.&lt;/p&gt;
&lt;p&gt;Até mais!&lt;/p&gt;
</description>
        <pubDate>Sat, 13 Jul 2013 00:00:00 -0300</pubDate>
        <link>/2013/07/13/adicionando-angularjs-via-cdn-fallback</link>
        <guid isPermaLink="true">/2013/07/13/adicionando-angularjs-via-cdn-fallback</guid>
        
        <category>content delivery network</category>
        
        <category>js</category>
        
        
        <category>angularjs</category>
        
        <category>javascript</category>
        
        <category>linguagens de programação</category>
        
        <category>outros</category>
        
      </item>
    
      <item>
        <title>Angularjs: Um framework para facilitar sua vida</title>
        <description>&lt;p&gt;Olá pessoal.&lt;/p&gt;
&lt;p&gt;Semana passada houve uma evento inusitado: Uma reunião do Google Developer Group da Bahia na UNIRB em Salvador e Marlon, que foi um dos organizadores do evento, entrou em contato comigo para que eu palestrasse sobre Angularjs. Para mim foi uma surpresa muito boa participar deste evento e poder colaborar com o mesmo. Daí nasceu a palestra &quot;Angularjs: Um framework para facilitar sua vida&quot;.&lt;/p&gt;
&lt;p&gt;Houveram várias outras palestras. O Marlon Carvalho (@marlonscarvalho) fez uma palestra excepcional mostrando como é simples o desenvolvimento de extensões para o navegador Google Chrome. O porquê criar, as facilidades encontradas e outros pontos.&lt;/p&gt;
&lt;p&gt;Logo após veio a palestra do Felipe Matheus, que veio falar sobre mundo Java e todas as possibilidades que uma linguagem multiplataforma pode proporcionar aos desenvolvedores, abordando desde o histórico até a etapa atual e novas idéias referentes ao ecossistema Java.&lt;/p&gt;
&lt;p&gt;Após Felipe, chegou a minha vez. A palestra seria inicialmente um overview sobre o Framework da google, mostrando seus pontos fortes, seu paradigma de programação descritiva e outros pontos que fazem do angularjs a escolha ideal em projetos diversos. Os slides estão disponíveis no meu slideshare.&lt;/p&gt;
&lt;p style=&quot;text-align:center;&quot;&gt;[slideshare id=17090730&amp;amp;w=427&amp;amp;h=356&amp;amp;sc=no]&lt;/p&gt;
&lt;div style=&quot;margin-bottom:5px;text-align:center;&quot;&gt;&lt;strong&gt;&lt;a title=&quot;ANGULARJS: UM FRAMEWORK PARA FACILITAR SUA VIDA&quot; href=&quot;http://www.slideshare.net/WilsonMendes/angularjs-um-framework-para-facilitar-sua-vida&quot; target=&quot;_blank&quot;&gt;&lt;br /&gt;
&lt;/a&gt;&lt;/strong&gt;&lt;strong&gt;&lt;/strong&gt;&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;Evento muito bom e que agregou conteúdo a toda a comunidade (parabéns ao evento por sinal Marlon)! Logo após, graças ao amigo Jonata Weber, ocorreu um hangout descontraído sobre o Angularjs com o pessoal do DEV FSA de Feira de Santana, Bahia. Segue o vídeo do Hangout:&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;/div&gt;
&lt;p&gt;[youtube http://www.youtube.com/watch?v=5Axrun_B6h4]&lt;/p&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;Criei também um repositório no github com os exemplos que foram mostrados na palestra. Dentre eles estão:&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;
&lt;ul&gt;
&lt;li&gt;Exemplos de utilização de recursos, consumindo a API de buscas do Twitter;&lt;/li&gt;
&lt;li&gt;Exemplos de diretivas, mostrando como criar tags e trabalhar o html como se fosse um arquivo xml;&lt;/li&gt;
&lt;li&gt;Exemplos de utilização de data-binding, criando um micro editor online, onde o usuário cria os seus snippets e pode testá-los em tempo real, vendo a modificação(exemplo: onde possuir a tag &amp;lt;lorem&amp;gt;&amp;lt;/lorem&amp;gt; será inserido um texto do site lorem ipsum e assim por diante);&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;Link do repositório do projeto no Github: &lt;a title=&quot;https://github.com/willmendesneto/palestra-angularjs&quot; href=&quot;https://github.com/willmendesneto/palestra-angularjs&quot; target=&quot;_blank&quot;&gt;https://github.com/willmendesneto/palestra-angularjs&lt;/a&gt;;&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;Obrigado e até mais!&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;/div&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;/div&gt;
</description>
        <pubDate>Thu, 14 Mar 2013 00:00:00 -0300</pubDate>
        <link>/2013/03/14/angularjs-um-framework-para-facilitar-sua-vida</link>
        <guid isPermaLink="true">/2013/03/14/angularjs-um-framework-para-facilitar-sua-vida</guid>
        
        <category>angularjs</category>
        
        <category>dev</category>
        
        <category>dev fsa</category>
        
        <category>framework</category>
        
        <category>google</category>
        
        <category>hangout</category>
        
        <category>javascript</category>
        
        <category>jquery</category>
        
        <category>palestra</category>
        
        
        <category>angularjs</category>
        
        <category>bdd</category>
        
        <category>colaborações</category>
        
        <category>github</category>
        
        <category>javascript</category>
        
        <category>jquery</category>
        
        <category>linguagens de programação</category>
        
      </item>
    
      <item>
        <title>Usando PHPUnit no Codeigniter via Hooks</title>
        <description>&lt;p&gt;Olá pessoal.&lt;/p&gt;
&lt;p&gt;Já fiz um post sobre &lt;a href=&quot;http://willmendesnetoprojects.wordpress.com/2013/02/21/testes-no-codeigniter-com-ciunit/&quot; target=&quot;_blank&quot;&gt;como fazer testes unitários utilizando o framework Codeigniter PHP com o CIUnit&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Uma grande pergunta que me fiz foi: &quot;Porque utilizar componentes externos se posso simplificar esse fluxo?&quot;&lt;/p&gt;
&lt;p&gt;Pesquisando achei este link que fala da utilização de hooks para integração do PHPUnit e o Codeigniter de maneira mais simples (&lt;a id=&quot;.reactRoot[5].[1][2][1]{comment340101742762753_340210312751896}.0.[1].0.[1].0.[0].[0][2].0.[6]&quot; href=&quot;http://phpfour.com/blog/2012/01/phpunit-integration-with-codeigniter/&quot; target=&quot;_blank&quot; rel=&quot;nofollow&quot;&gt;http://phpfour.com/blog/2012/01/phpunit-integration-with-codeigniter/&lt;/a&gt;), mas quando fui utilizá-lo via CLI tive alguns problemas, então tive que fazer algumas modificações.&lt;/p&gt;
&lt;p&gt;Inicialmente vamos fazer o download do framework no &lt;a href=&quot;https://github.com/EllisLab/CodeIgniter&quot; target=&quot;_blank&quot;&gt;repositório oficial da Ellislab&lt;/a&gt;. Feito o download descompactaremos ele no nosso servidor local. A partir daí faremos algumas modificações.&lt;/p&gt;
&lt;p&gt;No arquivo &#39;system/core/Exceptions.php&#39; iremos modificar os métodos &quot;show_php_error()&quot; e &quot;show_error()&quot; para que eles verifiquem se a chamada do arquivo foi feita via linha de comando. Caso positivo o erro deve ser otimizado para sua visualização via CLI. Insira este conteúdo no arquivo.&lt;/p&gt;
&lt;p&gt;Gist: &lt;a href=&quot;https://gist.github.com/willmendesneto/5025979&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/willmendesneto/5025979&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;No arquivo &#39;application/config/config.php&#39; modifique a linha 121 para que o array na posição &#39;enable_hooks&#39; tenha agora o valor &quot;TRUE&quot;, assim a aplicação fica sabendo que vai utilizar algum hook&lt;/p&gt;
&lt;p&gt;$config[&#39;enable_hooks&#39;] = TRUE;&lt;/p&gt;
&lt;p&gt;Após isso vá em &#39;application/config/hooks.php e insira este conteúdo&lt;/p&gt;
&lt;p&gt;$hook[&#39;display_override&#39;] = array(&lt;br /&gt;
&#39;class&#39; =&amp;gt; &#39;DisplayHook&#39;,&lt;br /&gt;
&#39;function&#39; =&amp;gt; &#39;captureOutput&#39;,&lt;br /&gt;
&#39;filename&#39; =&amp;gt; &#39;DisplayHook.php&#39;,&lt;br /&gt;
&#39;filepath&#39; =&amp;gt; &#39;hooks&#39;&lt;br /&gt;
);&lt;/p&gt;
&lt;p&gt;Gist: &lt;a href=&quot;https://gist.github.com/willmendesneto/5025990&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/willmendesneto/5025990&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Vamos criar a classe que vai interagir com o evento encadeado via hook. Crie o arquivo &#39;application/hooks.DisplayHook.php&#39; e insira o conteúdo deste gist.&lt;/p&gt;
&lt;p&gt;Gist: &lt;a href=&quot;https://gist.github.com/willmendesneto/5025995&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/willmendesneto/5025995&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Para maiores informações sobre os métodos que podem ser utilizados para os hooks, uma excelente dica é a documentação oficial do Codeigniter(&lt;a href=&quot;http://ellislab.com/codeigniter/user-guide/general/hooks.html&quot; target=&quot;_blank&quot;&gt;http://ellislab.com/codeigniter/user-guide/general/hooks.html&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Agora iremos criar as configurações para utilizarmos os testes unitários. Crie o arquivo &quot;phpunit.xml.dist&quot; na raíz do projeto com este conteúdo (&lt;a href=&quot;https://gist.github.com/willmendesneto/5026004&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/willmendesneto/5026004&lt;/a&gt;). Logo após crie uma pasta &#39;tests&#39; na raíz do projeto. Nesta pasta ficarão todos os arquivos de teste que utilizaremos neste exemplo. Para concluirmos a configuração do ambiente de testes, iremos criar um arquivo em &#39;tests/bootstrap.php&#39; com este conteúdo (&lt;a href=&quot;https://gist.github.com/willmendesneto/5026014&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/willmendesneto/5026014&lt;/a&gt;), assim nos asseguramos que os componentes do Framework estarão inicializados e prontos para o utilização nos testes.&lt;/p&gt;
&lt;p&gt;Estou utilizando o nome do banco dados &#39;ci-phpunit&#39; para este exemplo. Neste banco criaremos a tabela &#39;posts&#39; com este conteúdo:&lt;/p&gt;
&lt;p&gt;CREATE TABLE IF NOT EXISTS `posts` (&lt;br /&gt;
`id` int(5) NOT NULL AUTO_INCREMENT,&lt;br /&gt;
`title` varchar(100) DEFAULT NULL,&lt;br /&gt;
PRIMARY KEY (`id`)&lt;br /&gt;
) ENGINE=InnoDB DEFAULT CHARSET=utf8 AUTO_INCREMENT=1 ;&lt;/p&gt;
&lt;p&gt;Agora sim criaremos o nosso arquivo de testes. Crie o arquivo em &#39;tests/PostTest.php&#39; com este conteúdo.&lt;/p&gt;
&lt;p&gt;Gist: &lt;a href=&quot;https://gist.github.com/willmendesneto/5026017&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/willmendesneto/5026017&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Passando por estas etapas, abra a linha de comando e insira os comandos:&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
cd pasta-do-seu-projeto/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
phpunit&lt;br /&gt;
&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;ou&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;&lt;code&gt;phpunit --testdox&lt;/code&gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dica&lt;/strong&gt;: Caso esteja usando o phpunit via composer, você pode utilizar os comandos:&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
cd pasta-do-seu-projeto/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
php vendor/phpunit/phpunit/composer/bin/phpunit&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;ou&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
php vendor/phpunit/phpunit/composer/bin/phpunit --testdox&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Inicialmente vai dar errado o teste e mostrará o html da mensagem que seria visualizado no seu navegador.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/phpunit-test-fails.png&quot;&gt;&lt;img class=&quot;size-full wp-image-160&quot; alt=&quot;phpunit-teste-falhou&quot; src=&quot;/assets/images/phpunit-test-fails.png&quot; width=&quot;611&quot; height=&quot;202&quot; /&gt;&lt;/a&gt; phpunit-teste-falhou&lt;/p&gt;
&lt;p&gt;Não se espante, pois este evento já era esperado. Isto acontece porque o model Post ainda não existe. Vamos criá-lo? Inisira o model Post em &#39;application/models/Post.php&#39; com este conteúdo(&lt;a href=&quot;https://gist.github.com/willmendesneto/5026026&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/willmendesneto/5026026&lt;/a&gt;) e vamos rodar o comando na linha de comando novamente.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/phpunit-testes-ok.png&quot;&gt;&lt;img class=&quot;size-full wp-image-159&quot; alt=&quot;phpunit-testes-ok&quot; src=&quot;/assets/images/phpunit-testes-ok.png&quot; width=&quot;611&quot; height=&quot;202&quot; /&gt;&lt;/a&gt; phpunit-testes-ok&lt;/p&gt;
&lt;p&gt;Após o comando ser executado a mensagem que vai aparecer é esta acima, mostrando que está tudo ok! Seu teste está rodando no Codeigniter e o model Post foi testado corretamente somente com a utilização de um hook. Simples e prático.&lt;/p&gt;
&lt;p&gt;Se você nãoo conhece muita coisa sobre Testes Unitários e TDD, aconselho a dar uma olhada neste link do tutsplus (&lt;a href=&quot;http://net.tutsplus.com/sessions/test-driven-php/&quot; target=&quot;_blank&quot;&gt;http://net.tutsplus.com/sessions/test-driven-php/&lt;/a&gt;)  que aborda alguns conceitos e utilizações com exemplos utilizando a linguagem PHP.&lt;/p&gt;
&lt;p&gt;Criei um repositório no meu Github mostrando todas as etapas deste projeto e um controller com a migration para gerar a tabela &#39;posts&#39; no seu banco de dados. Segue o link(&lt;a href=&quot;https://github.com/willmendesneto/Codeigniter-TDD-with-Hooks&quot; target=&quot;_blank&quot;&gt;https://github.com/willmendesneto/Codeigniter-TDD-with-Hooks&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;Curtiu? Utiliza de outra forma? Dê sua opinião!&lt;/p&gt;
&lt;p&gt;Obrigado e até mais!&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Feb 2013 00:00:00 -0300</pubDate>
        <link>/2013/02/24/usando-phpunit-no-codeigniter-via-hooks</link>
        <guid isPermaLink="true">/2013/02/24/usando-phpunit-no-codeigniter-via-hooks</guid>
        
        
        <category>linguagens de programação</category>
        
      </item>
    
      <item>
        <title>Testes no Codeigniter com CIUnit</title>
        <description>&lt;p&gt;Olá pessoal.&lt;/p&gt;
&lt;p&gt;Para quem já tentou utilizar TDD (Test Development Driven) no Codeigniter percebeu que sofria horrores para conseguir. Para isso Tatsuya Fukata criou uma biblioteca, a CIUnit, e a deixou disponível no Github (&lt;a href=&quot;https://github.com/fukata/CIUnit-for-CI2&quot; target=&quot;_blank&quot;&gt;https://github.com/fukata/CIUnit-for-CI2&lt;/a&gt;). Este post vai mostrar como é bem simples fazermos testes unitários utilizando este componente.&lt;/p&gt;
&lt;p&gt;Seu acoplamento é bastante simples:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/sem-tc3adtulo.png&quot;&gt;&lt;img class=&quot;size-full wp-image-150&quot; alt=&quot;Github - Projeto CIUnit&quot; src=&quot;/assets/images/sem-tc3adtulo.png&quot; width=&quot;611&quot; height=&quot;320&quot; /&gt;&lt;/a&gt; Github - Projeto CIUnit&lt;/p&gt;
&lt;p&gt;Faça o download do Codeigniter e descompacte-o no seu servidor local. Após isto faça o download do projeto CIUnit e insira os arquivos do projeto no diretório &quot;application/third_party/&quot; da sua aplicação;&lt;/p&gt;
&lt;p&gt;Remova o conteúdo da pasta &quot;tests&quot; e crie o arquivo &quot;phpunit.xml.dist&quot; na raíz do projeto com este conteúdo (&lt;a href=&quot;https://gist.github.com/willmendesneto/5005522&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/willmendesneto/5005522&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Agora crie o arquivo  &quot;VerificationTests.php&quot; dentro da pasta tests e insira este conteúdo (&lt;a href=&quot;https://gist.github.com/willmendesneto/5005595&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/willmendesneto/5005595&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Passando por estas etapas, abra a linha de comando e insira os comandos:&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
cd pasta-do-seu-projeto/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
phpunit --testdox&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Dica&lt;/strong&gt;: Caso esteja usando o phpunit via composer, você pode utilizar os comandos:&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
cd pasta-do-seu-projeto/&lt;/code&gt;&lt;br /&gt;
&lt;code&gt;&lt;br /&gt;
php vendor/phpunit/phpunit/composer/bin/phpunit --testdox&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Pronto, se tudo deu certo você verá a mensagem de tudo ok na aplicação.&lt;/p&gt;
&lt;p&gt;Obrigado e até mais&lt;/p&gt;
&lt;p&gt;https://github.com/fukata/CIUnit-for-CI2&lt;/p&gt;
</description>
        <pubDate>Thu, 21 Feb 2013 00:00:00 -0300</pubDate>
        <link>/2013/02/21/testes-no-codeigniter-com-ciunit</link>
        <guid isPermaLink="true">/2013/02/21/testes-no-codeigniter-com-ciunit</guid>
        
        <category>ciunit</category>
        
        <category>codeigniter</category>
        
        <category>php</category>
        
        <category>tdd</category>
        
        <category>teste unitário</category>
        
        
        <category>codeigniter</category>
        
        <category>linguagens de programação</category>
        
        <category>php</category>
        
        <category>tdd</category>
        
        <category>testes</category>
        
      </item>
    
      <item>
        <title>Codeigniter + Twig + Composer : Uma boa idéia</title>
        <description>&lt;p&gt;Olá a todos.&lt;/p&gt;
&lt;p&gt;Em um projeto tive a necessidade de utilizar alguns recursos de um template engine e olhando alguns achei interessante trabalhar com o twig (&lt;a href=&quot;http://twig.sensiolabs.org/&quot; target=&quot;_blank&quot;&gt;http://twig.sensiolabs.org/&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/cover.jpg&quot;&gt;&lt;img class=&quot;size-full wp-image-113&quot; alt=&quot;Twig Template engine&quot; src=&quot;/assets/images/cover.jpg&quot; width=&quot;500&quot; height=&quot;250&quot; /&gt;&lt;/a&gt; Twig Template engine&lt;/p&gt;
&lt;p&gt;Já existe uma biblioteca no Codeigniter para trabalhar com o Twig, o Codeigniter Twig (&lt;a href=&quot;https://github.com/altrano/codeigniter-twig&quot;&gt;https://github.com/altrano/codeigniter-twig&lt;/a&gt;) que é de fácil acoplamento, basta fazer o download dos arquivos, inseri-los na aplicação e carregar no controller que vá usá-lo. Ele faz o processo de carregamento automático dos helpers inseridos no arquivo de autoload da aplicação.&lt;/p&gt;
&lt;p&gt;application/libraries/Twig.php&lt;br /&gt;
Link do gist  : &lt;a href=&quot;https://gist.github.com/4551063&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/4550897&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;application/config/twig.php&lt;a href=&quot;https://gist.github.com/4551063&quot; target=&quot;_blank&quot;&gt;&lt;br /&gt;
&lt;/a&gt; Link do gist : &lt;a href=&quot;https://gist.github.com/4550897&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/4550897&lt;/a&gt;&lt;br /&gt;
Baixado os arquivos do projeto Codeigniter Twig no github e inseridos no projeto, vamos começar a integração Primeiro vamos inserir o composer na aplicação. Iremos criar a requisição do Twig no arquivos composer.json. Crie um arquivo &lt;em&gt;composer.json&lt;/em&gt; na raíz do projeto com as informações:&lt;/p&gt;
&lt;p&gt;composer.json&lt;br /&gt;
Link do gist : &lt;a href=&quot;https://gist.github.com/4550979&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/4550979&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Depois iremos inserir o código que vai chamar o arquivo de carregamento dos pacotes do composer no arquivo&lt;em&gt; index.php&lt;/em&gt; na raíz do projeto.&lt;/p&gt;
&lt;p&gt;No arquivo autoload.php (application/config/autoload.php) modifique o conteúdo do arquivo da linha 55 à 67 e insira a informação abaixo:&lt;/p&gt;
&lt;p&gt;application/config/autoload.php&lt;br /&gt;
Link do gist : &lt;a href=&quot;https://gist.github.com/4551017&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/4551017&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;O código do controller da aplicação:&lt;/p&gt;
&lt;p&gt;application/controllers/welcome.php&lt;br /&gt;
Link do gist: &lt;a href=&quot;https://gist.github.com/4550963&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/4550963&lt;/a&gt;&lt;/p&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Agora os templates. O Twig tem algumas funções nativas que podem ser muito úteis. Criaremos 2 arquivos na pasta &quot;application/views&quot;:&lt;/div&gt;
&lt;div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;template.html.twig - &lt;/strong&gt;Template padrão da aplicação&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;index.html.twig - &lt;/strong&gt;Arquivo com o conteúdo específico da página;&lt;/li&gt;
&lt;/ul&gt;
&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Como ficou o código das views:&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;template.html.twig&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;application/views/template.html.twig&lt;/div&gt;
&lt;div&gt;Link do gist : &lt;a href=&quot;https://gist.github.com/4551035&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/4551017&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;strong&gt;index.html.twig&lt;/strong&gt;&lt;/div&gt;
&lt;div&gt;
&lt;p&gt;application/views/index.html.twig&lt;br /&gt;
Link do gist : &lt;a href=&quot;https://gist.github.com/4551051&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/4551017&lt;/a&gt;&lt;/p&gt;
&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Agora uma observação:&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Quando for utilizar algum helper que gere html (form_helper, por exemplo), utilize o método com o sufixo |raw&lt;/div&gt;
&lt;div&gt; Chamada da função &lt;strong&gt;form_open();&lt;/strong&gt; do helper&lt;/div&gt;
&lt;div&gt;     &lt;code&gt;&lt;/code&gt;&lt;/div&gt;
&lt;div&gt;ao invés de&lt;/div&gt;
&lt;div&gt;     &lt;code&gt;form_open(&quot;/login&quot;);&lt;/code&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Link do Gist com o código dos arquivos utilizados no projeto:&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;https://gist.github.com/4541588&quot; target=&quot;_blank&quot;&gt;https://gist.github.com/4541588&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Documentação do Twig:&lt;/div&gt;
&lt;div&gt;&lt;a href=&quot;http://twig.sensiolabs.org/doc/tags/raw.html&quot; target=&quot;_blank&quot;&gt;http://twig.sensiolabs.org/doc/tags/raw.html&lt;/a&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;Valeu e até mais!&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
&lt;div&gt;&lt;/div&gt;
</description>
        <pubDate>Fri, 18 Jan 2013 00:00:00 -0300</pubDate>
        <link>/2013/01/18/codeigniter-twig-composer-uma-boa-ideia</link>
        <guid isPermaLink="true">/2013/01/18/codeigniter-twig-composer-uma-boa-ideia</guid>
        
        <category>codeigniter</category>
        
        <category>composer</category>
        
        <category>framework</category>
        
        <category>mendes</category>
        
        <category>php</category>
        
        
        <category>linguagens de programação</category>
        
      </item>
    
      <item>
        <title>Framework ou CMS?</title>
        <description>&lt;p&gt;Olá pessoal.&lt;/p&gt;
&lt;p&gt;Semana passada aconteceu mais uma rodada de mini-cursos e palestras na empresa e dessa vez o tema que abordei foi &quot;Framework ou CMS?&quot;, uma mini-palestra mostrando os pontos fortes e fracos dos Frameworks e CMS , comparativo de alguns em diversas linguagens e quando utilizá-los.&lt;/p&gt;
&lt;p&gt;Segue o slide da mini-palestra.&lt;br /&gt;
[slideshare id=16025606&amp;amp;w=427&amp;amp;h=356&amp;amp;sc=no]&lt;/p&gt;
&lt;div style=&quot;margin-bottom:5px;&quot;&gt;&lt;strong&gt; &lt;a title=&quot;Framework ou cms&quot; href=&quot;http://www.slideshare.net/WilsonMendes/framework-ou-cms&quot; target=&quot;_blank&quot;&gt;Framework ou cms&lt;/a&gt; &lt;/strong&gt; from &lt;strong&gt;&lt;a href=&quot;http://www.slideshare.net/WilsonMendes&quot; target=&quot;_blank&quot;&gt;Wilson Mendes&lt;/a&gt;&lt;/strong&gt;&lt;/div&gt;
&lt;p&gt;Valeu e até mais!&lt;/p&gt;
</description>
        <pubDate>Thu, 17 Jan 2013 00:00:00 -0300</pubDate>
        <link>/2013/01/17/framework-ou-cms</link>
        <guid isPermaLink="true">/2013/01/17/framework-ou-cms</guid>
        
        <category>.net</category>
        
        <category>cms</category>
        
        <category>framework</category>
        
        <category>java.ruby</category>
        
        <category>php</category>
        
        <category>python</category>
        
        
        <category>linguagens de programação</category>
        
      </item>
    
      <item>
        <title>Open source: criação do tema &quot;twitter bootstrap&quot; no Grocery CRUD</title>
        <description>&lt;p&gt;Olá pessoal.&lt;/p&gt;
&lt;p&gt;A quem utiliza o scaffolding Grocery CRUD (&lt;a href=&quot;http://www.grocerycrud.com/&quot; target=&quot;_blank&quot;&gt;http://www.grocerycrud.com/&lt;/a&gt;) nos projetos com o Codeigniter fiz uma colaboração no projeto criando um novo tema para ele com base no Twitter bootstrap (&lt;a href=&quot;http://twitter.github.com/bootstrap/&quot; target=&quot;_blank&quot;&gt;http://twitter.github.com/bootstrap/&lt;/a&gt;) pelo fato da grande absorção dele em grandes projetos e de todas as suas facilidades para interações, UX e outros aspectos.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/sem-tc3adtulojnj.png&quot;&gt;&lt;img class=&quot;size-full wp-image-100&quot; alt=&quot;Github do projeto&quot; src=&quot;/assets/images/sem-tc3adtulojnj.png&quot; width=&quot;500&quot; height=&quot;178&quot; /&gt;&lt;/a&gt; Github do projeto&lt;/p&gt;
&lt;p&gt;Para quem quiser testar e/ou utilizá-lo em suas aplicações para verificar o seu uso, o projeto mais atual com o tema pode ser encontrado no repositório do próprio projeto no Github (&lt;a href=&quot;https://github.com/scoumbourdis/grocery-crud&quot; target=&quot;_blank&quot;&gt;https://github.com/scoumbourdis/grocery-crud&lt;/a&gt;).&lt;/p&gt;
&lt;p&gt;Fica aqui a minha satisfação de poder participar do projeto e poder contribuir ao projeto do John Skoumbourdis (&lt;a href=&quot;https://github.com/scoumbourdis&quot; target=&quot;_blank&quot;&gt;https://github.com/scoumbourdis&lt;/a&gt;) . Agradeço também ao John por me inserir na listagem dos colaboradores do projeto na página do projeto no link &lt;a href=&quot;http://www.grocerycrud.com/documentation/credits&quot; target=&quot;_blank&quot;&gt;http://www.grocerycrud.com/documentation/credits&lt;/a&gt;!&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;/assets/images/sem-tc3adtulo.jpg&quot;&gt;&lt;img class=&quot; wp-image-99 &quot; alt=&quot;Créditos no projeto Grocery CRUD&quot; src=&quot;/assets/images/sem-tc3adtulo.jpg&quot; width=&quot;527&quot; height=&quot;526&quot; /&gt;&lt;/a&gt; Créditos no projeto Grocery CRUD&lt;/p&gt;
&lt;p&gt;Espero que vocês gostem do resultado, ainda estou aprimorando-o, então toda sugestão e crítica é sempre bem-vinda e acima de tudo todos podem colaborar na melhora do projeto!&lt;/p&gt;
&lt;p&gt;Pretendo participar do novo projeto do grocery CRUD 2.0 que deve focar alguns outros aspectos como interoperabilidade atendendo a alguns PSR&#39;s como o PSR-0 e o PSR-1, testes unitários, melhoras de performance, dentre outros para que possa ser utilizado em qualquer projeto PHP!&lt;/p&gt;
&lt;p&gt;Obrigado e até mais!&lt;/p&gt;
</description>
        <pubDate>Sun, 13 Jan 2013 00:00:00 -0300</pubDate>
        <link>/2013/01/13/open-source-criacao-do-tema-twitter-bootstrap-no-grocery-crud</link>
        <guid isPermaLink="true">/2013/01/13/open-source-criacao-do-tema-twitter-bootstrap-no-grocery-crud</guid>
        
        <category>bootstrap</category>
        
        <category>codeigniter</category>
        
        <category>crud</category>
        
        <category>desenvolvimento</category>
        
        <category>grocery</category>
        
        <category>php</category>
        
        <category>scaffolding</category>
        
        <category>twitter</category>
        
        
        <category>codeigniter</category>
        
        <category>colaborações</category>
        
        <category>git</category>
        
        <category>github</category>
        
        <category>linguagens de programação</category>
        
        <category>php</category>
        
      </item>
    
  </channel>
</rss>
